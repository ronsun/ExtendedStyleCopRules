<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SourceAnalyzer"
    targetNamespace="https://github.com/ronsun/ExtendedStyleCopRules"
    elementFormDefault="qualified"
    xmlns:this="https://github.com/ronsun/ExtendedStyleCopRules"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
  <!--root element-->
  <xs:element name="SourceAnalyzer">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <!--Description-->
        <xs:element name="Description" type="xs:string" minOccurs="1" maxOccurs="1" />

        <!--Properties-->
        <xs:element name="Properties">
          <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="BooleanProperty" type="this:BoolPropertyType" />
              <xs:element name="IntegerProperty" type="this:IntegerPropertyType" />
              <xs:element name="StringProperty" type="this:StringPropertyType" />
              <xs:element name="CollectionProperty" type="this:CollectionPropertyType" />
            </xs:choice>
          </xs:complexType>
        </xs:element>

        <!--Rules-->
        <xs:element name="Rules">
          <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="RuleGroup" type="this:RuleGroupType"/>
              <xs:element name="Rule" type="this:RuleType"/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:attribute name="Name" type="this:notEmptyString" />
    </xs:complexType>
  </xs:element>

  <xs:complexType name="BoolPropertyType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attributeGroup ref="this:BasePropertyAttributes" />
        <xs:attribute name="DefaultValue" type="this:boolString" use="required" />
        <xs:attribute name="DisplaySettings" type="this:boolString" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="IntegerPropertyType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attributeGroup ref="this:BasePropertyAttributes" />
        <xs:attribute name="DefaultValue" type="xs:int" use="required" />
        <xs:attribute name="DisplaySettings" type="this:boolString" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="StringPropertyType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attributeGroup ref="this:BasePropertyAttributes" />
        <xs:attribute name="DefaultValue" type="xs:string" use="required" />
        <xs:attribute name="DisplaySettings" type="this:boolString" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:attributeGroup name="BasePropertyAttributes">
    <xs:attribute name="Name" type="this:notEmptyString" use="required" />
    <xs:attribute name="FriendlyName" type="this:notEmptyString" use="required" />
    <xs:attribute name="Description" type="this:notEmptyString" use="required" />
    <xs:attribute name="Merge" type="this:boolString" />
  </xs:attributeGroup>

  <xs:complexType name="CollectionPropertyType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attributeGroup ref="this:BasePropertyAttributes" />
        <xs:attribute name="Aggregate" type="this:boolString" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="RuleGroupType">
    <xs:sequence>
      <xs:element name="Rule" type="this:RuleType" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="Name" type="this:notEmptyString" />
  </xs:complexType>

  <xs:complexType name="RuleType">
    <xs:all>
      <xs:element name="Context" type="xs:string" minOccurs="1" maxOccurs="1" />
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="Name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <!--first char must be upper and others must be letter or digits-->
          <xs:pattern value ="[A-Z]{1}[a-zA-Z0-9]*" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="CheckId" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <!--format like 'AB1234', start with 2 upper letters and end with 4 digits.-->
          <xs:pattern value="[A-Z]{2}[0-9]{4}" />
          <!--can not start with 'SA'-->
          <xs:pattern value ="^(?!SA)" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Warning" type="this:boolString" />
    <xs:attribute name="DisabledByDefault" type="this:boolString" />
    <xs:attribute name="CanDisable" type="this:boolString" />
  </xs:complexType>

  <xs:simpleType name="boolString">
    <xs:restriction base="xs:string">
      <!--'true' or 'false' ignroe case-->
      <xs:pattern value="(?i)(true)|(?i)(false)" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="notEmptyString">
    <xs:restriction base="xs:string">
      <xs:minLength value="1" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
